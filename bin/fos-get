#!/usr/bin/env python3


from fog05.DStore import *

import uuid
import argparse
import pprint


##
## TODO: sostitute all string with variables in store interaction
##


class FOSStore(object):
    def __init__(self, aroot, droot, home):
        self.aroot = aroot #'dfos://<sys-id>'
        self.ahome = str('%s/%s' % (aroot, home)) #str('dfos://<sys-id>/%s' % self.uuid)

        self.droot = droot  # 'dfos://<sys-id>'
        self.dhome = str('%s/%s' % (droot, home))  # str('dfos://<sys-id>/%s' % self.uuid)

        self.actual = DStore(home, self.aroot, self.ahome, 1024)
        self.desidered = DStore(home, self.droot, self.dhome, 1024)

    def close(self):
        self.actual.close()
        self.desidered.close()


class FOSGetCli(object):

    def __init__(self):
        self.agent = None
        self.store = None
        self.aroot = 'afos://<sys-id>'
        self.droot = 'dfos://<sys-id>'
        self.uuid = str(uuid.uuid4())


    def exit(self, exit_code):
        if self.store is not None:
            self.store.close()
        exit(exit_code)

    def __initialize(self):
        self.store = FOSStore(self.aroot, self.droot, self.uuid)

        if len(self.store.actual.discovered_stores) == 0:
            print("Waiting...")
            time.sleep(0.5)
        if len(self.store.desidered.discovered_stores) == 0:
            print("Waiting...")
            time.sleep(0.5)

        pprint.pprint(self.store.desidered.discovered_stores)
        pprint.pprint(self.store.actual.discovered_stores)

    def __read_file(self, file_path):
        with open(file_path, 'r') as f:
            data = f.read()
        return data

    def get(self, uri):

        if uri.startswith('a'):



            if '*' in uri:
                if uri.endswith('/*'):
                    uri = uri+'/'
                elif uri.endswith('/**'):
                    uri.rstrip('*')
                pprint.pprint(self.store.actual.resolveAll(uri))
            else:
                pprint.pprint(json.loads(self.store.actual.get(uri)))

        elif uri.startswith('d'):
            if '*' in uri:
                if uri.endswith('/*'):
                    uri + '/'
                elif uri.endswith('/**'):
                    uri.rstrip('*')
                pprint.pprint(self.store.actual.resolveAll(uri))
            else:
                pprint.pprint(json.loads(self.store.actual.get(uri)))


    def main(self):

        parser = argparse.ArgumentParser(description='Fog05 get helper for Store')
        parser.add_argument('-u', '--uri', required=True, type=str, default=False, help='URI')

        kwargs = vars(parser.parse_args())
        self.__initialize()
        self.get(kwargs['uri'])

        self.exit(0)

if __name__ == '__main__':
        c = FOSGetCli()
        c.main()